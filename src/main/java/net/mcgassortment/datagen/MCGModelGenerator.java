package net.mcgassortment.datagen;

import net.fabricmc.fabric.api.datagen.v1.FabricDataOutput;
import net.fabricmc.fabric.api.datagen.v1.provider.FabricModelProvider;
import net.mcgassortment.MCGBlocks;
import net.mcgassortment.MCGItems;
import net.minecraft.block.Blocks;
import net.minecraft.data.client.BlockStateModelGenerator;
import net.minecraft.data.client.ItemModelGenerator;
import net.minecraft.data.client.Models;
import net.minecraft.data.client.TexturedModel;

public class MCGModelGenerator extends FabricModelProvider {
    public MCGModelGenerator(FabricDataOutput output) {
        super(output);
    }

    @Override
    public void generateBlockStateModels(BlockStateModelGenerator blockStateModelGenerator) {
        BlockStateModelGenerator.BlockTexturePool whiteConcreteTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.WHITE_CONCRETE);
        BlockStateModelGenerator.BlockTexturePool orangeConcreteTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.ORANGE_CONCRETE);
        BlockStateModelGenerator.BlockTexturePool magentaConcreteTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.MAGENTA_CONCRETE);
        BlockStateModelGenerator.BlockTexturePool lightBlueConcreteTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.LIGHT_BLUE_CONCRETE);
        BlockStateModelGenerator.BlockTexturePool yellowConcreteTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.YELLOW_CONCRETE);
        BlockStateModelGenerator.BlockTexturePool limeConcreteTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.LIME_CONCRETE);
        BlockStateModelGenerator.BlockTexturePool pinkConcreteTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.PINK_CONCRETE);
        BlockStateModelGenerator.BlockTexturePool grayConcreteTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.GRAY_CONCRETE);
        BlockStateModelGenerator.BlockTexturePool lightGrayConcreteTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.LIGHT_GRAY_CONCRETE);
        BlockStateModelGenerator.BlockTexturePool cyanConcreteTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.CYAN_CONCRETE);
        BlockStateModelGenerator.BlockTexturePool purpleConcreteTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.PURPLE_CONCRETE);
        BlockStateModelGenerator.BlockTexturePool blueConcreteTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.BLUE_CONCRETE);
        BlockStateModelGenerator.BlockTexturePool brownConcreteTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.BROWN_CONCRETE);
        BlockStateModelGenerator.BlockTexturePool greenConcreteTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.GREEN_CONCRETE);
        BlockStateModelGenerator.BlockTexturePool redConcreteTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.RED_CONCRETE);
        BlockStateModelGenerator.BlockTexturePool blackConcreteTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.BLACK_CONCRETE);
        BlockStateModelGenerator.BlockTexturePool whiteTerracottaTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.WHITE_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool orangeTerracottaTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.ORANGE_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool magentaTerracottaTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.MAGENTA_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool lightBlueTerracottaTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.LIGHT_BLUE_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool yellowTerracottaTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.YELLOW_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool limeTerracottaTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.LIME_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool pinkTerracottaTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.PINK_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool grayTerracottaTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.GRAY_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool lightGrayTerracottaTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.LIGHT_GRAY_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool cyanTerracottaTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.CYAN_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool purpleTerracottaTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.PURPLE_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool blueTerracottaTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.BLUE_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool brownTerracottaTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.BROWN_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool greenTerracottaTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.GREEN_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool redTerracottaTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.RED_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool blackTerracottaTexturePool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.BLACK_TERRACOTTA);

        whiteConcreteTexturePool.stairs(MCGBlocks.WHITE_CONCRETE_STAIRS);
        whiteConcreteTexturePool.slab(MCGBlocks.WHITE_CONCRETE_SLAB);
        whiteConcreteTexturePool.wall(MCGBlocks.WHITE_CONCRETE_WALL);
        whiteTerracottaTexturePool.stairs(MCGBlocks.WHITE_TERRACOTTA_STAIRS);
        whiteTerracottaTexturePool.slab(MCGBlocks.WHITE_TERRACOTTA_SLAB);
        whiteTerracottaTexturePool.wall(MCGBlocks.WHITE_TERRACOTTA_WALL);
        orangeConcreteTexturePool.stairs(MCGBlocks.ORANGE_CONCRETE_STAIRS);
        orangeConcreteTexturePool.slab(MCGBlocks.ORANGE_CONCRETE_SLAB);
        orangeConcreteTexturePool.wall(MCGBlocks.ORANGE_CONCRETE_WALL);
        orangeTerracottaTexturePool.stairs(MCGBlocks.ORANGE_TERRACOTTA_STAIRS);
        orangeTerracottaTexturePool.slab(MCGBlocks.ORANGE_TERRACOTTA_SLAB);
        orangeTerracottaTexturePool.wall(MCGBlocks.ORANGE_TERRACOTTA_WALL);
        magentaConcreteTexturePool.stairs(MCGBlocks.MAGENTA_CONCRETE_STAIRS);
        magentaConcreteTexturePool.slab(MCGBlocks.MAGENTA_CONCRETE_SLAB);
        magentaConcreteTexturePool.wall(MCGBlocks.MAGENTA_CONCRETE_WALL);
        magentaTerracottaTexturePool.stairs(MCGBlocks.MAGENTA_TERRACOTTA_STAIRS);
        magentaTerracottaTexturePool.slab(MCGBlocks.MAGENTA_TERRACOTTA_SLAB);
        magentaTerracottaTexturePool.wall(MCGBlocks.MAGENTA_TERRACOTTA_WALL);
        lightBlueConcreteTexturePool.stairs(MCGBlocks.LIGHT_BLUE_CONCRETE_STAIRS);
        lightBlueConcreteTexturePool.slab(MCGBlocks.LIGHT_BLUE_CONCRETE_SLAB);
        lightBlueConcreteTexturePool.wall(MCGBlocks.LIGHT_BLUE_CONCRETE_WALL);
        lightBlueTerracottaTexturePool.stairs(MCGBlocks.LIGHT_BLUE_TERRACOTTA_STAIRS);
        lightBlueTerracottaTexturePool.slab(MCGBlocks.LIGHT_BLUE_TERRACOTTA_SLAB);
        lightBlueTerracottaTexturePool.wall(MCGBlocks.LIGHT_BLUE_TERRACOTTA_WALL);
        yellowConcreteTexturePool.stairs(MCGBlocks.YELLOW_CONCRETE_STAIRS);
        yellowConcreteTexturePool.slab(MCGBlocks.YELLOW_CONCRETE_SLAB);
        yellowConcreteTexturePool.wall(MCGBlocks.YELLOW_CONCRETE_WALL);
        yellowTerracottaTexturePool.stairs(MCGBlocks.YELLOW_TERRACOTTA_STAIRS);
        yellowTerracottaTexturePool.slab(MCGBlocks.YELLOW_TERRACOTTA_SLAB);
        yellowTerracottaTexturePool.wall(MCGBlocks.YELLOW_TERRACOTTA_WALL);
        limeConcreteTexturePool.stairs(MCGBlocks.LIME_CONCRETE_STAIRS);
        limeConcreteTexturePool.slab(MCGBlocks.LIME_CONCRETE_SLAB);
        limeConcreteTexturePool.wall(MCGBlocks.LIME_CONCRETE_WALL);
        limeTerracottaTexturePool.stairs(MCGBlocks.LIME_TERRACOTTA_STAIRS);
        limeTerracottaTexturePool.slab(MCGBlocks.LIME_TERRACOTTA_SLAB);
        limeTerracottaTexturePool.wall(MCGBlocks.LIME_TERRACOTTA_WALL);
        pinkConcreteTexturePool.stairs(MCGBlocks.PINK_CONCRETE_STAIRS);
        pinkConcreteTexturePool.slab(MCGBlocks.PINK_CONCRETE_SLAB);
        pinkConcreteTexturePool.wall(MCGBlocks.PINK_CONCRETE_WALL);
        pinkTerracottaTexturePool.stairs(MCGBlocks.PINK_TERRACOTTA_STAIRS);
        pinkTerracottaTexturePool.slab(MCGBlocks.PINK_TERRACOTTA_SLAB);
        pinkTerracottaTexturePool.wall(MCGBlocks.PINK_TERRACOTTA_WALL);
        grayConcreteTexturePool.stairs(MCGBlocks.GRAY_CONCRETE_STAIRS);
        grayConcreteTexturePool.slab(MCGBlocks.GRAY_CONCRETE_SLAB);
        grayConcreteTexturePool.wall(MCGBlocks.GRAY_CONCRETE_WALL);
        grayTerracottaTexturePool.stairs(MCGBlocks.GRAY_TERRACOTTA_STAIRS);
        grayTerracottaTexturePool.slab(MCGBlocks.GRAY_TERRACOTTA_SLAB);
        grayTerracottaTexturePool.wall(MCGBlocks.GRAY_TERRACOTTA_WALL);
        lightGrayConcreteTexturePool.stairs(MCGBlocks.LIGHT_GRAY_CONCRETE_STAIRS);
        lightGrayConcreteTexturePool.slab(MCGBlocks.LIGHT_GRAY_CONCRETE_SLAB);
        lightGrayConcreteTexturePool.wall(MCGBlocks.LIGHT_GRAY_CONCRETE_WALL);
        lightGrayTerracottaTexturePool.stairs(MCGBlocks.LIGHT_GRAY_TERRACOTTA_STAIRS);
        lightGrayTerracottaTexturePool.slab(MCGBlocks.LIGHT_GRAY_TERRACOTTA_SLAB);
        lightGrayTerracottaTexturePool.wall(MCGBlocks.LIGHT_GRAY_TERRACOTTA_WALL);
        cyanConcreteTexturePool.stairs(MCGBlocks.CYAN_CONCRETE_STAIRS);
        cyanConcreteTexturePool.slab(MCGBlocks.CYAN_CONCRETE_SLAB);
        cyanConcreteTexturePool.wall(MCGBlocks.CYAN_CONCRETE_WALL);
        cyanTerracottaTexturePool.stairs(MCGBlocks.CYAN_TERRACOTTA_STAIRS);
        cyanTerracottaTexturePool.slab(MCGBlocks.CYAN_TERRACOTTA_SLAB);
        cyanTerracottaTexturePool.wall(MCGBlocks.CYAN_TERRACOTTA_WALL);
        purpleConcreteTexturePool.stairs(MCGBlocks.PURPLE_CONCRETE_STAIRS);
        purpleConcreteTexturePool.slab(MCGBlocks.PURPLE_CONCRETE_SLAB);
        purpleConcreteTexturePool.wall(MCGBlocks.PURPLE_CONCRETE_WALL);
        purpleTerracottaTexturePool.stairs(MCGBlocks.PURPLE_TERRACOTTA_STAIRS);
        purpleTerracottaTexturePool.slab(MCGBlocks.PURPLE_TERRACOTTA_SLAB);
        purpleTerracottaTexturePool.wall(MCGBlocks.PURPLE_TERRACOTTA_WALL);
        blueConcreteTexturePool.stairs(MCGBlocks.BLUE_CONCRETE_STAIRS);
        blueConcreteTexturePool.slab(MCGBlocks.BLUE_CONCRETE_SLAB);
        blueConcreteTexturePool.wall(MCGBlocks.BLUE_CONCRETE_WALL);
        blueTerracottaTexturePool.stairs(MCGBlocks.BLUE_TERRACOTTA_STAIRS);
        blueTerracottaTexturePool.slab(MCGBlocks.BLUE_TERRACOTTA_SLAB);
        blueTerracottaTexturePool.wall(MCGBlocks.BLUE_TERRACOTTA_WALL);
        brownConcreteTexturePool.stairs(MCGBlocks.BROWN_CONCRETE_STAIRS);
        brownConcreteTexturePool.slab(MCGBlocks.BROWN_CONCRETE_SLAB);
        brownConcreteTexturePool.wall(MCGBlocks.BROWN_CONCRETE_WALL);
        brownTerracottaTexturePool.stairs(MCGBlocks.BROWN_TERRACOTTA_STAIRS);
        brownTerracottaTexturePool.slab(MCGBlocks.BROWN_TERRACOTTA_SLAB);
        brownTerracottaTexturePool.wall(MCGBlocks.BROWN_TERRACOTTA_WALL);
        greenConcreteTexturePool.stairs(MCGBlocks.GREEN_CONCRETE_STAIRS);
        greenConcreteTexturePool.slab(MCGBlocks.GREEN_CONCRETE_SLAB);
        greenConcreteTexturePool.wall(MCGBlocks.GREEN_CONCRETE_WALL);
        greenTerracottaTexturePool.stairs(MCGBlocks.GREEN_TERRACOTTA_STAIRS);
        greenTerracottaTexturePool.slab(MCGBlocks.GREEN_TERRACOTTA_SLAB);
        greenTerracottaTexturePool.wall(MCGBlocks.GREEN_TERRACOTTA_WALL);
        redConcreteTexturePool.stairs(MCGBlocks.RED_CONCRETE_STAIRS);
        redConcreteTexturePool.slab(MCGBlocks.RED_CONCRETE_SLAB);
        redConcreteTexturePool.wall(MCGBlocks.RED_CONCRETE_WALL);
        redTerracottaTexturePool.stairs(MCGBlocks.RED_TERRACOTTA_STAIRS);
        redTerracottaTexturePool.slab(MCGBlocks.RED_TERRACOTTA_SLAB);
        redTerracottaTexturePool.wall(MCGBlocks.RED_TERRACOTTA_WALL);
        blackConcreteTexturePool.stairs(MCGBlocks.BLACK_CONCRETE_STAIRS);
        blackConcreteTexturePool.slab(MCGBlocks.BLACK_CONCRETE_SLAB);
        blackConcreteTexturePool.wall(MCGBlocks.BLACK_CONCRETE_WALL);
        blackTerracottaTexturePool.stairs(MCGBlocks.BLACK_TERRACOTTA_STAIRS);
        blackTerracottaTexturePool.slab(MCGBlocks.BLACK_TERRACOTTA_SLAB);
        blackTerracottaTexturePool.wall(MCGBlocks.BLACK_TERRACOTTA_WALL);

        blockStateModelGenerator.registerGlassPane(MCGBlocks.BORDERLESS_GLASS, MCGBlocks.BORDERLESS_GLASS_PANE);
        blockStateModelGenerator.registerSimpleCubeAll(MCGBlocks.BORDERLESS_WHITE_STAINED_GLASS);
        blockStateModelGenerator.registerSimpleCubeAll(MCGBlocks.BORDERLESS_ORANGE_STAINED_GLASS);
        blockStateModelGenerator.registerSimpleCubeAll(MCGBlocks.BORDERLESS_MAGENTA_STAINED_GLASS);
        blockStateModelGenerator.registerSimpleCubeAll(MCGBlocks.BORDERLESS_LIGHT_BLUE_STAINED_GLASS);
        blockStateModelGenerator.registerSimpleCubeAll(MCGBlocks.BORDERLESS_YELLOW_STAINED_GLASS);
        blockStateModelGenerator.registerSimpleCubeAll(MCGBlocks.BORDERLESS_LIME_STAINED_GLASS);
        blockStateModelGenerator.registerSimpleCubeAll(MCGBlocks.BORDERLESS_PINK_STAINED_GLASS);
        blockStateModelGenerator.registerSimpleCubeAll(MCGBlocks.BORDERLESS_GRAY_STAINED_GLASS);
        blockStateModelGenerator.registerSimpleCubeAll(MCGBlocks.BORDERLESS_LIGHT_GRAY_STAINED_GLASS);
        blockStateModelGenerator.registerSimpleCubeAll(MCGBlocks.BORDERLESS_CYAN_STAINED_GLASS);
        blockStateModelGenerator.registerSimpleCubeAll(MCGBlocks.BORDERLESS_PURPLE_STAINED_GLASS);
        blockStateModelGenerator.registerSimpleCubeAll(MCGBlocks.BORDERLESS_BLUE_STAINED_GLASS);
        blockStateModelGenerator.registerSimpleCubeAll(MCGBlocks.BORDERLESS_BROWN_STAINED_GLASS);
        blockStateModelGenerator.registerSimpleCubeAll(MCGBlocks.BORDERLESS_GREEN_STAINED_GLASS);
        blockStateModelGenerator.registerSimpleCubeAll(MCGBlocks.BORDERLESS_RED_STAINED_GLASS);
        blockStateModelGenerator.registerSimpleCubeAll(MCGBlocks.BORDERLESS_BLACK_STAINED_GLASS);
        blockStateModelGenerator.registerSimpleCubeAll(MCGBlocks.BORDERLESS_TINTED_GLASS);
        blockStateModelGenerator.registerSimpleCubeAll(MCGBlocks.RAW_BEEF_BLOCK);
        blockStateModelGenerator.registerSimpleCubeAll(MCGBlocks.RAW_PORK_BLOCK);
        blockStateModelGenerator.registerSimpleCubeAll(MCGBlocks.ROTTEN_FLESH_BLOCK);

        blockStateModelGenerator.registerAxisRotated(MCGBlocks.BAMBOO_THATCH, TexturedModel.CUBE_COLUMN, TexturedModel.CUBE_COLUMN_HORIZONTAL);
    }

    @Override
    public void generateItemModels(ItemModelGenerator itemModelGenerator) {
        itemModelGenerator.register(MCGBlocks.BORDERLESS_WHITE_STAINED_GLASS_PANE.asItem(), Models.GENERATED);
        itemModelGenerator.register(MCGBlocks.BORDERLESS_ORANGE_STAINED_GLASS_PANE.asItem(), Models.GENERATED);
        itemModelGenerator.register(MCGBlocks.BORDERLESS_MAGENTA_STAINED_GLASS_PANE.asItem(), Models.GENERATED);
        itemModelGenerator.register(MCGBlocks.BORDERLESS_LIGHT_BLUE_STAINED_GLASS_PANE.asItem(), Models.GENERATED);
        itemModelGenerator.register(MCGBlocks.BORDERLESS_YELLOW_STAINED_GLASS_PANE.asItem(), Models.GENERATED);
        itemModelGenerator.register(MCGBlocks.BORDERLESS_LIME_STAINED_GLASS_PANE.asItem(), Models.GENERATED);
        itemModelGenerator.register(MCGBlocks.BORDERLESS_PINK_STAINED_GLASS_PANE.asItem(), Models.GENERATED);
        itemModelGenerator.register(MCGBlocks.BORDERLESS_GRAY_STAINED_GLASS_PANE.asItem(), Models.GENERATED);
        itemModelGenerator.register(MCGBlocks.BORDERLESS_LIGHT_GRAY_STAINED_GLASS_PANE.asItem(), Models.GENERATED);
        itemModelGenerator.register(MCGBlocks.BORDERLESS_CYAN_STAINED_GLASS_PANE.asItem(), Models.GENERATED);
        itemModelGenerator.register(MCGBlocks.BORDERLESS_PURPLE_STAINED_GLASS_PANE.asItem(), Models.GENERATED);
        itemModelGenerator.register(MCGBlocks.BORDERLESS_BLUE_STAINED_GLASS_PANE.asItem(), Models.GENERATED);
        itemModelGenerator.register(MCGBlocks.BORDERLESS_BROWN_STAINED_GLASS_PANE.asItem(), Models.GENERATED);
        itemModelGenerator.register(MCGBlocks.BORDERLESS_GREEN_STAINED_GLASS_PANE.asItem(), Models.GENERATED);
        itemModelGenerator.register(MCGBlocks.BORDERLESS_RED_STAINED_GLASS_PANE.asItem(), Models.GENERATED);
        itemModelGenerator.register(MCGBlocks.BORDERLESS_BLACK_STAINED_GLASS_PANE.asItem(), Models.GENERATED);
        itemModelGenerator.register(MCGItems.TALLOW, Models.GENERATED);
    }
}